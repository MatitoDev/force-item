plugins {
    id 'java'
    id("xyz.jpenilla.run-paper") version "2.3.1"
    id "io.github.goooler.shadow" version "8.1.7"
}

group = 'dev.matito'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven { url = "https://jitpack.io" }

    maven { url = "https://repo.papermc.io/repository/maven-public/" }
    maven { url = "https://oss.sonatype.org/content/groups/public/" }
    maven { url = "https://repo.codemc.org/repository/maven-public/" }

    maven { url = "https://maven.mineking.dev/releases" }
    maven { url = "https://maven.slimecloud.de/releases" }
    maven { url = "https://maven.slimecloud.de/snapshots" }
}

dependencies {
    compileOnly("io.papermc.paper:paper-api:1.21.6-R0.1-SNAPSHOT")

    compileOnly "dev.jorel:commandapi-bukkit-core:10.1.1"

    implementation "dev.triumphteam:triumph-gui:3.1.11"
    implementation "de.mineking:DatabaseUtils:1.5.0"
    implementation "de.mineking:JavaUtils:1.9.0"
    implementation "io.github.cdimascio:dotenv-java:3.0.0"


    implementation "org.postgresql:postgresql:42.7.7"
    implementation "org.jdbi:jdbi3-postgres:3.49.5"
    implementation "net.postgis:postgis-jdbc:2025.1.1"

    compileOnly "org.jetbrains:annotations:24.1.0"
    compileOnly "org.projectlombok:lombok:1.18.32"
    annotationProcessor "org.projectlombok:lombok:1.18.32"
}

shadowJar {
    archiveFileName = "${project.name}.jar"
}

runServer {
    downloadPlugins {
        //url("https://cdn.modrinth.com/data/kTmEpjUi/versions/mUVvmAmt/MTimer-132.jar")
        hangar("CommandAPI", "10.1.1")
        hangar("ViaVersion", "5.4.2-SNAPSHOT+777")
        hangar("ViaBackwards", "5.4.2-SNAPSHOT+457")
    }

    dependsOn shadowJar
    version "1.21.6"
}

def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('paper-plugin.yml') {
        expand props
    }
}
